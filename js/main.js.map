{"version":3,"sources":["doorBase.js","doorOthers.js","myApp.js"],"names":["DoorBase","number","onUnlock","onDoorClick","this","isDisabled","openPopup","onCloseClick","closePopup","onUnclockCallback","level","document","querySelector","door","popup","close","isLocked","classList","contains","addEventListener","bind","Door0","_onButtonPointerDown","e","target","add","checkCondition","apply","_onButtonPointerUp","remove","isOpened","buttons","forEach","b","unlock","arguments","Door1","_onKeyPointerDown","setPointerCapture","pointerId","moveAt","_onKeyPointerMove","style","left","pageX","offsetWidth","top","pageY","offsetHeight","_onKeyPointerUp","doElsCollide","greenKey","greenLock","display","yellowKey","yellowLock","keys","k","el1","el2","c1","c2","bodyRect","body","getBoundingClientRect","elemRect1","elemRect2","offsetBottom","offsetRight","Door2","Box","_onEyePointerDown","_onEyePointerUp","eyes","showCongratulations","alert","App","el","previousUnlocked","i","doors","length","enable","prototype","Object","create","constructor","app"],"mappings":"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","file":"main.js","sourcesContent":["/**\n * Базовый класс всех дверей\n * @class DoorBase\n * @param {Number} number\n * @param {Function} onUnlock\n */\n\nfunction DoorBase(number, onUnlock) {\n    this.number = number;\n    this.onUnclockCallback = onUnlock;\n\n    this.level = document.querySelector('.level_' + number);\n    this.door = document.querySelector('.door_level_' + number);\n    this.popup = document.querySelector('.popup_level_' + number);\n    this.close = this.popup.querySelector('.popup__close');\n\n    this.isLocked = true;\n    this.isDisabled = this.door.classList.contains('door_disabled');\n\n    this.door.addEventListener('click', onDoorClick.bind(this));\n    this.close.addEventListener('click', onCloseClick.bind(this));\n\n    function onDoorClick() {\n        if (!this.isDisabled) {\n            this.openPopup();\n        }\n    }\n\n    function onCloseClick() {\n        this.closePopup();\n    }\n}\n\nDoorBase.prototype = {\n    openPopup: function () {\n        this.popup.classList.remove('popup_hidden');\n    },\n    closePopup: function () {\n        this.popup.classList.add('popup_hidden');\n    },\n    enable: function () {\n        this.door.classList.remove('door_disabled');\n        this.isDisabled = false;\n    },\n    /**\n     * Вызывается, если после последовательности действий\n     * дверь считается открытой\n     */\n    unlock: function () {\n        this.door.classList.remove('door_locked');\n        this.isLocked = false;\n        this.closePopup();\n        this.onUnclockCallback();\n        this.showCongratulations();\n    },\n    showCongratulations: function () {\n        alert('Дверь ' + this.number + ' открыта!');\n    }\n};\n","// ===================== Пример кода первой двери =======================\n/**\n * @class Door0\n * @augments DoorBase\n * @param {Number} number\n * @param {Function} onUnlock\n */\nfunction Door0(number, onUnlock) {\n    DoorBase.apply(this, arguments);\n\n    var buttons = [\n        this.popup.querySelector('.door-riddle__button_0'),\n        this.popup.querySelector('.door-riddle__button_1'),\n        this.popup.querySelector('.door-riddle__button_2')\n    ];\n\n    buttons.forEach(function (b) {\n        b.addEventListener('pointerdown', _onButtonPointerDown.bind(this));\n        b.addEventListener('pointerup', _onButtonPointerUp.bind(this));\n        b.addEventListener('pointercancel', _onButtonPointerUp.bind(this));\n        b.addEventListener('pointerleave', _onButtonPointerUp.bind(this));\n    }.bind(this));\n\n    function _onButtonPointerDown(e) {\n        e.target.classList.add('door-riddle__button_pressed');\n        checkCondition.apply(this);\n    }\n\n    function _onButtonPointerUp(e) {\n        e.target.classList.remove('door-riddle__button_pressed');\n    }\n\n    /**\n     * Проверяем, можно ли теперь открыть дверь\n     */\n    function checkCondition() {\n        var isOpened = true;\n        buttons.forEach(function (b) {\n            if (!b.classList.contains('door-riddle__button_pressed')) {\n                isOpened = false;\n            }\n        });\n\n        // Если все три кнопки зажаты одновременно, то откроем эту дверь\n        if (isOpened) {\n            this.unlock();\n        }\n    }\n}\n\n// Наследуемся от класса DoorBase\nDoor0.prototype = Object.create(DoorBase.prototype);\nDoor0.prototype.constructor = DoorBase;\n// END ===================== Пример кода первой двери =======================\n\n/**\n * @class Door1\n * @augments DoorBase\n * @param {Number} number\n * @param {Function} onUnlock\n */\nfunction Door1(number, onUnlock) {\n    DoorBase.apply(this, arguments);\n\n    // ==== Напишите свой код для открытия второй двери здесь ====\n    // Для примера дверь откроется просто по клику на неё\n\n    var keys = [\n        this.popup.querySelector('.door-riddle__key_yellow'),\n        this.popup.querySelector('.door-riddle__key_green'),\n    ];\n\n    keys.forEach(function (k) {\n        k.addEventListener('pointerdown', _onKeyPointerDown.bind(this));\n        k.addEventListener('pointermove', _onKeyPointerMove.bind(this));\n        k.addEventListener('pointerup', _onKeyPointerUp.bind(this));\n        k.addEventListener('pointercancel', _onKeyPointerUp.bind(this));\n        k.addEventListener('pointerleave', _onKeyPointerUp.bind(this));\n    }.bind(this));\n\n    function _onKeyPointerDown(e) {\n        e.target.setPointerCapture(e.pointerId);\n        e.target.classList.add('door-riddle__key_pressed');\n        moveAt(e);\n    }\n\n    function _onKeyPointerMove(e) {\n        moveAt(e);\n    }\n\n    function moveAt(e) {\n        if (e.target.classList.contains('door-riddle__key_pressed')) {\n            e.target.style.left = e.pageX - e.target.offsetWidth / 2 + 'px';\n            e.target.style.top = e.pageY - e.target.offsetHeight / 2 + 'px';\n        }\n    }\n\n    function _onKeyPointerUp(e) {\n        if (e.target.classList.contains('door-riddle__key_pressed')) {\n            e.target.classList.remove('door-riddle__key_pressed');\n        }\n\n        if (doElsCollide(greenKey, greenLock, 1, 1) === true) {\n            greenKey.classList.add('door-riddle__key_unlocked');\n            greenLock.style.display = 'none';\n        }\n\n        if (doElsCollide(yellowKey, yellowLock, 1, 1) === true) {\n            yellowKey.classList.add('door-riddle__key_unlocked');\n            yellowLock.style.display = 'none';\n        }\n        checkCondition.apply(this);\n    }\n\n    doElsCollide = function (el1, el2, c1, c2) {\n        var bodyRect = document.body.getBoundingClientRect();\n        var elemRect1 = el1.getBoundingClientRect();\n        var elemRect2 = el2.getBoundingClientRect();\n        el1.offsetBottom = elemRect1.top - bodyRect.top + c1 * el1.offsetHeight;\n        el1.offsetRight = elemRect1.left - bodyRect.left + c1 * el1.offsetWidth;\n        el2.offsetBottom = elemRect2.top - bodyRect.top + c2 * el2.offsetHeight;\n        el2.offsetRight = elemRect2.left - bodyRect.left + c2 * el2.offsetWidth;\n\n        return !((el1.offsetBottom < elemRect2.top - bodyRect.top) ||\n                 (elemRect1.top - bodyRect.top > el2.offsetBottom) ||\n                 (el1.offsetRight < elemRect2.left - bodyRect.left) ||\n                 (elemRect1.left - bodyRect.left > el2.offsetRight));\n    };\n\n    var greenKey = document.querySelector('.door-riddle__key_green');\n    var greenLock = document.querySelector('.door-riddle__lock_green');\n    var yellowKey = document.querySelector('.door-riddle__key_yellow');\n    var yellowLock = document.querySelector('.door-riddle__lock_yellow');\n\n    function checkCondition() {\n        var isOpened = true;\n        keys.forEach(function (k) {\n            if (!k.classList.contains('door-riddle__key_unlocked')) {\n                isOpened = false;\n            }\n        });\n\n        if (isOpened) {\n            this.unlock();\n        }\n    }\n    // ==== END Напишите свой код для открытия второй двери здесь ====\n}\n\nDoor1.prototype = Object.create(DoorBase.prototype);\nDoor1.prototype.constructor = DoorBase;\n\n/**\n * @class Door2\n * @augments DoorBase\n * @param {Number} number\n * @param {Function} onUnlock\n */\nfunction Door2(number, onUnlock) {\n    DoorBase.apply(this, arguments);\n\n    // ==== Напишите свой код для открытия третей двери здесь ====\n    // Для примера дверь откроется просто по клику на неё\n    this.popup.addEventListener('click', function () {\n        this.unlock();\n    }.bind(this));\n    // ==== END Напишите свой код для открытия третей двери здесь ====\n}\nDoor2.prototype = Object.create(DoorBase.prototype);\nDoor2.prototype.constructor = DoorBase;\n\n/**\n * Сундук\n * @class Box\n * @augments DoorBase\n * @param {Number} number\n * @param {Function} onUnlock\n */\nfunction Box(number, onUnlock) {\n    DoorBase.apply(this, arguments);\n\n    var eyes = [\n        this.popup.querySelector('.boss-riddle__eye'),\n        this.popup.querySelector('.boss-riddle__eye'),\n    ];\n\n    eyes.forEach(function (b) {\n        b.addEventListener('pointerdown', _onEyePointerDown.bind(this));\n        b.addEventListener('pointerup', _onEyePointerUp.bind(this));\n        b.addEventListener('pointercancel', _onEyePointerUp.bind(this));\n        b.addEventListener('pointerleave', _onEyePointerUp.bind(this));\n    }.bind(this));\n\n    function _onEyePointerDown(e) {\n        e.target.classList.add('boss-riddle__eye_pressed');\n        checkCondition.apply(this);\n    }\n\n    function _onEyePointerUp(e) {\n        e.target.classList.remove('boss-riddle__eye_pressed');\n    }\n\n    function checkCondition() {\n        var isOpened = true;\n        eyes.forEach(function (b) {\n            if (!b.classList.contains('boss-riddle__eye_pressed')) {\n                isOpened = false;\n            }\n        });\n\n        if (isOpened) {\n            this.unlock();\n        }\n    }\n\n    // ==== END Напишите свой код для открытия сундука здесь ====\n\n    this.showCongratulations = function () {\n        alert('Поздравляю! Игра пройдена!');\n    };\n}\nBox.prototype = Object.create(DoorBase.prototype);\nBox.prototype.constructor = DoorBase;\n","/**\n * @class App\n * @param {Element} el\n */\n\nfunction App(el) {\n    var appEl = el;\n    var doors = [\n        new Door0(0, onUnlock),\n        new Door1(1, onUnlock),\n        new Door2(2, onUnlock),\n        new Box(3, onUnlock)\n    ];\n\n    this.doors = doors;\n\n    /**\n     * Callback вызывается в коде двери\n     * Тут даем возможность открыть следующие двери\n     */\n    function onUnlock() {\n        var previousUnlocked;\n\n        // Даем открыть следующую дверь\n        for (var i = 0; i < doors.length; i++) {\n            if (!doors[i].isLocked) {\n                previousUnlocked = true;\n            } else {\n                if (previousUnlocked && doors[i].isLocked) {\n                    doors[i].enable();\n                    break;\n                }\n            }\n        }\n    }\n}\n\n// Start the app\nvar app = new App(document.querySelector('.app'));\n"],"sourceRoot":"/source/"}